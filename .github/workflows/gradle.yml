name: Java CI with Gradle
 
on:
  #schedule: 
    #- cron: * * * * *
   
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
 
#permissions:
  #contents: read
 
jobs:
  build:
 
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
        
    #- name: Artifact    
      #uses: actions/upload-artifact@v3
      #with:
        #name: my-artifact
        #path: src/
        #if-no-files-found: error
        #retention-days: 90

    #- name: Set up Docker Buildx and push
      #uses: docker/setup-buildx-action@v3
      
    #- name: Docker Build and Push
      #run: |
        #docker image build -t vijayakumar626/dockerimage:1.1.4 .
        #echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin       
        #docker push vijayakumar626/dockerimage:1.1.4
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    #- name: Load secrets and save to app.env
      #run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: gradlerepo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
  
